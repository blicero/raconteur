# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2023-09-12 23:08:34 krylon>
#
#+TAGS: go(g) internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

Raconteur is an application to play audio books or podcasts.
My main goal, though, is to learn about GUI programming (which have done
before but suck at), specifically Gtk3 (I have prior experience using Gtk2
from C, Python, Perl, and Ruby), and its Go bindings.
Also, this might be a good opportunity to learn about dbus, but I am not sure
yet how that would factor in.

* Clock
  Here I keep track of the time I waste on this futile effort.
  #+BEGIN: clocktable :scope file :maxlevel 202 :emphasize t
  #+CAPTION: Clock summary at [2023-09-12 Di 23:08]
  | Headline                   | Time      |           |          |       |
  |----------------------------+-----------+-----------+----------+-------|
  | *Total time*               | *5d 2:16* |           |          |       |
  |----------------------------+-----------+-----------+----------+-------|
  | *Moving parts [5/7]*       | *5d 2:16* |           |          |       |
  | \_  /Data types [0/0]/     |           | /2:40/    |          |       |
  | \_  /Database [0/0]/       |           | /7:25/    |          |       |
  | \_  /Scanner [2/2]/        |           | /10:05/   |          |       |
  | \_    Metadata             |           |           |     8:15 |       |
  | \_      Monitor Folders    |           |           |          |  4:45 |
  | \_  /GUI [4/6]/            |           | /4d 6:06/ |          |       |
  | \_    Editing metadata     |           |           |     0:09 |       |
  | \_    Playback             |           |           | 2d 14:48 |       |
  | \_      GStreamer          |           |           |          |  1:25 |
  | \_      VLC                |           |           |          |  3:48 |
  | \_      Audacious [0/0]    |           |           |          | 18:54 |
  | \_    TreeView             |           |           |     9:09 |       |
  | \_      Multiple Selection |           |           |          |  7:33 |
  | \_      Sorting            |           |           |          |  1:36 |
  #+END:

* Moving parts [5/7]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
** Data types [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
   :LOGBOOK:
   CLOCK: [2021-09-06 Mo 20:34]--[2021-09-06 Mo 23:14] =>  2:40
   :END:
   I will need types to describe what I am dealing with.
** Database [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
   :LOGBOOK:
   CLOCK: [2022-06-07 Di 20:20]--[2022-06-07 Di 21:14] =>  0:54
   CLOCK: [2021-09-11 Sa 22:27]--[2021-09-12 So 00:06] =>  1:39
   CLOCK: [2021-09-11 Sa 19:50]--[2021-09-11 Sa 20:49] =>  0:59
   CLOCK: [2021-09-11 Sa 15:50]--[2021-09-11 Sa 17:56] =>  2:06
   CLOCK: [2021-09-07 Di 18:45]--[2021-09-07 Di 20:32] =>  1:47
   :END:
   I am going to use SQLite, because for our use case, it is awesome.
   Plus, I like SQL.
** Scanner [2/2]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
   :LOGBOOK:
   CLOCK: [2021-09-07 Di 20:36]--[2021-09-07 Di 22:26] =>  1:50
   :END:
   Scanner walks directory trees looking for audio files. Roughly speaking.
*** DONE Metadata
    CLOSED: [2022-06-20 Mo 22:50]
    :LOGBOOK:
    CLOCK: [2022-06-14 Di 18:18]--[2022-06-14 Di 21:16] =>  2:58
    CLOCK: [2022-06-14 Di 17:45]--[2022-06-14 Di 18:17] =>  0:32
    :END:
    I want to read and use metadata to automatically assign Files to Programs
    and to automatically set the title.
**** DONE Monitor Folders
     CLOSED: [2022-06-20 Mo 22:50]
     :LOGBOOK:
     CLOCK: [2022-06-20 Mo 22:05]--[2022-06-20 Mo 22:46] =>  0:41
     CLOCK: [2022-06-20 Mo 19:42]--[2022-06-20 Mo 21:59] =>  2:17
     CLOCK: [2022-06-20 Mo 17:49]--[2022-06-20 Mo 19:36] =>  1:47
     :END:
** GUI [4/6]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
   :LOGBOOK:
   CLOCK: [2022-06-11 Sa 16:35]--[2022-06-11 Sa 17:57] =>  1:22
   CLOCK: [2022-06-10 Fr 16:33]--[2022-06-10 Fr 22:05] =>  5:32
   CLOCK: [2022-06-10 Fr 15:10]--[2022-06-10 Fr 16:10] =>  1:00
   CLOCK: [2022-06-09 Do 20:04]--[2022-06-09 Do 23:44] =>  3:40
   CLOCK: [2022-06-09 Do 17:23]--[2022-06-09 Do 19:48] =>  2:25
   CLOCK: [2022-06-09 Do 13:30]--[2022-06-09 Do 13:44] =>  0:14
   CLOCK: [2022-06-08 Mi 15:56]--[2022-06-08 Mi 21:33] =>  5:37
   CLOCK: [2022-06-07 Di 21:14]--[2022-06-07 Di 22:14] =>  1:00
   CLOCK: [2022-06-07 Di 17:50]--[2022-06-07 Di 19:37] =>  1:47
   CLOCK: [2022-06-05 So 16:32]--[2022-06-05 So 17:10] =>  0:38
   CLOCK: [2022-06-04 Sa 17:59]--[2022-06-04 Sa 22:51] =>  4:52
   CLOCK: [2022-06-03 Fr 18:04]--[2022-06-03 Fr 19:57] =>  1:53
   :END:
   Like I said, we're going to use gotk3, the Go bindings to Gtk3. I think
   Gtk4 is a thing, but ... whatever, I'm still slightly annoyed I cannot just
   use Gtk2, although the changes seem to not be that drastic.
*** TODO Editing metadata
    :LOGBOOK:
    CLOCK: [2023-09-12 Di 21:36]--[2023-09-12 Di 21:45] =>  0:09
    :END:
*** DONE Playback
    CLOSED: [2023-09-12 Di 20:14]
    :LOGBOOK:
    CLOCK: [2022-06-28 Di 18:59]--[2022-06-28 Di 21:57] =>  2:58
    CLOCK: [2022-06-27 Mo 21:41]--[2022-06-27 Mo 22:13] =>  0:32
    CLOCK: [2022-06-27 Mo 18:25]--[2022-06-27 Mo 21:11] =>  2:46
    CLOCK: [2022-06-25 Sa 17:47]--[2022-06-25 Sa 23:31] =>  5:44
    CLOCK: [2022-06-24 Fr 18:08]--[2022-06-24 Fr 23:37] =>  5:29
    CLOCK: [2022-06-23 Do 19:56]--[2022-06-23 Do 22:40] =>  2:44
    CLOCK: [2022-06-23 Do 18:18]--[2022-06-23 Do 19:45] =>  1:27
    CLOCK: [2022-06-21 Di 19:57]--[2022-06-21 Di 23:00] =>  3:03
    CLOCK: [2022-06-21 Di 19:20]--[2022-06-21 Di 19:40] =>  0:20
    CLOCK: [2022-06-18 Sa 18:06]--[2022-06-18 Sa 19:20] =>  1:14
    CLOCK: [2022-06-17 Fr 17:32]--[2022-06-18 Sa 00:12] =>  6:40
    CLOCK: [2022-06-15 Mi 18:40]--[2022-06-15 Mi 23:53] =>  5:13
    CLOCK: [2022-06-14 Di 21:56]--[2022-06-14 Di 22:27] =>  0:31
    :END:
    I am not quite sure how to approach this. Do I just invoke a regular media
    player, or do I attempt to play the files myself? I /could/ use gstreamer,
    for which Go bindings exist.
    Also, if I use an external player, I /could/ just start a process, like
    gPodder does, or I could use dbus to control the player. ???
**** CANCELLED GStreamer
CLOSED: [2023-09-12 Di 17:51]
     :LOGBOOK:
     CLOCK: [2022-06-30 Do 18:57]--[2022-06-30 Do 20:22] =>  1:25
     :END:
     After a bunch of trial and error, I must conclude that VLC does not match
     my expectations. So I will can it for the moment and make an attempt to
     use gstreamer to play the audio directly from my application. I wonder
     how that will work out.
**** VLC
     :LOGBOOK:
     CLOCK: [2022-06-29 Mi 18:47]--[2022-06-29 Mi 22:35] =>  3:48
     :END:
     VLC does look like the most promising player, but for some reason, adding
     files to its playlist tends to crash it on my development machine very
     reliably, and I have no clue whatsoever why that might be.
     ...
     Turns out that after erasing my config file, VLC runs just fine. WTF?
**** TODO Audacious [0/0]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2023-09-12 Di 17:07]--[2023-09-12 Di 17:48] =>  0:41
     CLOCK: [2023-09-12 Di 00:30]--[2023-09-12 Di 01:15] =>  0:45
     CLOCK: [2023-09-11 Mo 19:15]--[2023-09-11 Mo 21:28] =>  2:13
     CLOCK: [2023-09-11 Mo 09:28]--[2023-09-11 Mo 11:05] =>  1:37
     CLOCK: [2023-09-10 So 17:59]--[2023-09-10 So 19:03] =>  1:04
     CLOCK: [2023-09-09 Sa 19:21]--[2023-09-09 Sa 21:34] =>  2:13
     CLOCK: [2023-09-09 Sa 17:19]--[2023-09-09 Sa 19:15] =>  1:56
     CLOCK: [2023-09-08 Fr 17:25]--[2023-09-09 Sa 00:56] =>  7:31
     CLOCK: [2023-09-06 Mi 19:19]--[2023-09-06 Mi 20:13] =>  0:54
     :END:
     I'll give audacious a try, because ... don't hate me ... I'm listening to
     VLC while coding, I don't want to interfere with that. 🤷🏻‍♂️
     As an afterthought, I discovered that audacious has a very rich D-Bus
     interface, far more feature-rich than what MPris2 offers.
*** TreeView
**** SUSPENDED Multiple Selection
     CLOSED: [2022-06-14 Di 22:01]
     :LOGBOOK:
     CLOCK: [2022-06-13 Mo 17:09]--[2022-06-13 Mo 21:27] =>  4:18
     CLOCK: [2022-06-11 Sa 19:35]--[2022-06-11 Sa 22:50] =>  3:15
     :END:
**** SUSPENDED Sorting
CLOSED: [2023-09-12 Di 17:51]
     :LOGBOOK:
     CLOCK: [2022-06-11 Sa 17:59]--[2022-06-11 Sa 19:35] =>  1:36
     :END:
     Maybe another day?
* Questions
* Bugs
